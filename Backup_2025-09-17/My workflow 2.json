{
  "createdAt": "2025-09-16T11:25:37.490Z",
  "updatedAt": "2025-09-16T11:25:37.490Z",
  "id": "QzNTOaRdIZBWkf6a",
  "name": "My workflow 2",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "updates": [
          "messages"
        ],
        "options": {}
      },
      "type": "n8n-nodes-base.whatsAppTrigger",
      "typeVersion": 1,
      "position": [
        -608,
        400
      ],
      "id": "9af3b5dd-c466-4203-8ffc-9e106845d13b",
      "name": "WhatsApp Trigger",
      "webhookId": "18fa5dd3-7f95-4551-a5ce-7c5d96656f03"
    },
    {
      "parameters": {
        "promptType": "=define",
        "text": "={{$json.text}}",
        "options": {
          "systemMessage": "=# Role\n  You are a helpful assistant to a Med Clinic called 'Angel Clinic'\n\n# Instructions\n\n## Your main functions will be to:\n\n1) Set up a new doctor–patient appointment and for that, you will need to know the patient's name, email, phone, and confirm the date and hour with the patient before actually booking it.\nYou can do that by accessing the Create_Calendar Tool\n\n2) Modify a booked doctor–patient appointment — same patient info and confirmation required before updating.\nUse the Modify_Calendar Tool\n\n3) Cancel a booked doctor–patient appointment — again, confirm patient details and appointment timing before cancellation.\nUse the Delete_Calendar Tool\n\n4) Answer general questions about the doctors’ specialities, availabilities, as well as the clinic, its location, etc., and also about pricing, forms of payment, etc. All those info will be available in the vector store and/or via the Check_Calendar Tool.\n\n# Narrowing\nYou are to reply only in english\nYou are to never give medical opinions, prescriptions, or advice under any circumstance. Same goes for pills or any doubts about medicine — only doctors can handle that.\n\nAny questions outside the scope of a med clinic secretary, you shall not answer.\n\nToday is {{  $now.format('cccc') }} the {{ $now.format('dd-MM-yyyy HH:mm') }}."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        1008,
        400
      ],
      "id": "5f8bbffb-c496-4716-a4ec-0cfa31802536",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {
          "temperature": 0.4
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1008,
        752
      ],
      "id": "f1e976a0-30f3-494a-a35d-491e431136f5",
      "name": "OpenAI Chat Model"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ae2f6d2b-8c0d-4220-bd92-dd118abae9cc",
              "name": "=text",
              "value": "={{ $json.messages[0].text.body }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        0,
        400
      ],
      "id": "bf7effa0-92c0-4989-8188-bfd1b812d9f4",
      "name": "Text Only Prompt"
    },
    {
      "parameters": {
        "url": "={{ $json.url }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "whatsAppApi",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        224,
        0
      ],
      "id": "cb47a0e3-046c-46ef-8482-fbb0cd0fc6b4",
      "name": "Download Audio"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        448,
        0
      ],
      "id": "c2239780-b44d-4630-8f5a-5bacecec1b54",
      "name": "Transcribe Audio"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7d1f50ad-491f-4ade-b8fc-35ae876af1c2",
              "name": "text",
              "value": "={{ $json.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        688,
        0
      ],
      "id": "a56711fd-ca39-4408-9ff6-f680a43a0704",
      "name": "Audio prompt"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5023ffc5-4f00-4cd0-a105-0f6226f482a9",
              "leftValue": "={{ $('WhatsApp Trigger').item.json.messages[0].audio }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1440,
        400
      ],
      "id": "90eb233b-4869-437e-a440-d33227bbfde2",
      "name": "If"
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "724227274102271",
        "recipientPhoneNumber": "={{ $('WhatsApp Trigger').item.json.messages[0].from }}",
        "textBody": "={{ $json.output }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        1760,
        528
      ],
      "id": "22f4a291-00a9-483e-8ab6-c69d70b338db",
      "name": "Respond with text",
      "webhookId": "feba6a3e-eb0f-4cf7-9158-994ceca6190f"
    },
    {
      "parameters": {
        "resource": "audio",
        "input": "={{ $('AI Agent').item.json.output }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        1648,
        208
      ],
      "id": "663e973e-592e-44e9-b429-f7ac1d49375d",
      "name": "Generate audio"
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "724227274102271",
        "recipientPhoneNumber": "={{ $('WhatsApp Trigger').item.json.messages[0].from }}",
        "messageType": "audio",
        "mediaPath": "useMedian8n",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        2048,
        208
      ],
      "id": "bde2d160-d151-4b0a-b1f7-c944afe0580c",
      "name": "Send message",
      "webhookId": "dec8cb2a-ce08-48de-92da-d2eb0ea041e9"
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and change the MIME type of binary data\nfor (const item of $input.all()) {\n  // Check if the item has binary data\n  if (item.binary) {\n    // Find the binary property name (assuming there's at least one)\n    const binaryPropertyNames = Object.keys(item.binary);\n\n    for (const propName of binaryPropertyNames) {\n      // If the MIME type is 'audio/mp3', change it to 'audio/mpeg'\n      if (item.binary[propName].mimeType === \"audio/mp3\") {\n        item.binary[propName].mimeType = \"audio/mpeg\";\n      }\n    }\n  }\n}\n\nreturn $input.all();"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1840,
        208
      ],
      "id": "0a24a7ca-a2e8-4714-8e0f-b13d39b3c8f4",
      "name": "Code"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.messages[0].audio }}",
                    "rightValue": "",
                    "operator": {
                      "type": "object",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "id": "2be3cc2e-35e0-44b3-bd85-954e7e332ec6"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "f7506186-052a-4cbf-9d58-1ec64cbe1e75",
                    "leftValue": "={{ $json.messages[0].text }}",
                    "rightValue": "",
                    "operator": {
                      "type": "object",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "7aec2e7a-e6b7-432e-bf06-d39e2464cdfa",
                    "leftValue": "={{ $json.messages[0].image }}",
                    "rightValue": "",
                    "operator": {
                      "type": "object",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -416,
        384
      ],
      "id": "2ac3d622-e618-4701-982f-b020b2ccdeee",
      "name": "Switch"
    },
    {
      "parameters": {
        "resource": "media",
        "operation": "mediaUrlGet",
        "mediaGetId": "={{ $('WhatsApp Trigger').item.json.messages[0].audio.id }}"
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "id": "8fa56545-7417-491b-bccb-9f67173ba35f",
      "name": "Get Audio Url",
      "webhookId": "32fb4b07-0129-4f3f-b6ea-989cbd258d07"
    },
    {
      "parameters": {
        "resource": "media",
        "operation": "mediaUrlGet",
        "mediaGetId": "={{ $('WhatsApp Trigger').item.json.messages[0].image.id }}"
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        32,
        752
      ],
      "id": "f3239373-d43e-4ee9-82e5-6ee97eb4ebbf",
      "name": "Get Image Url",
      "webhookId": "08f5b6bf-c4d9-4273-b188-c4de71d2dd4e"
    },
    {
      "parameters": {
        "url": "={{ $json.url }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "whatsAppApi",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        240,
        752
      ],
      "id": "221c8105-b3c7-4560-b674-95d5f1aa0241",
      "name": "Download Image"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "chatgpt-4o-latest",
          "mode": "list",
          "cachedResultName": "CHATGPT-4O-LATEST"
        },
        "text": "Describe this image in detail.",
        "inputType": "base64",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        432,
        752
      ],
      "id": "d86484bf-40c9-48bf-965b-46207ed76025",
      "name": "Analyze image"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "58fb969f-083d-479b-b114-31e99cdf33a8",
              "name": "text",
              "value": "=# The user provided the following image and text.\n\n\n## Image Description:\n{{ $json.content }}\n\n## User Message:\n{{ $('WhatsApp Trigger').item.json.messages[0].image.caption || \"Describe this image.\" }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        608,
        752
      ],
      "id": "c328f694-896d-4ef3-879c-9ea90d97c6ad",
      "name": "Image + Text prompt"
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolDescription": "Extract info about the doctors, the clinic, pricing , address, availability, etc",
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "topK": 10,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1.3,
      "position": [
        2000,
        912
      ],
      "id": "04e73abe-1232-4e9e-b78e-4dd58d23c6fd",
      "name": "Supabase Vector Store"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        2128,
        1280
      ],
      "id": "324d4b34-5ed3-4bb6-bff4-692b0f7593b6",
      "name": "Embeddings OpenAI"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('WhatsApp Trigger').item.json.contacts[0].wa_id }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        1152,
        800
      ],
      "id": "d279b8e0-50c2-4379-b4c6-5d66a80bc152",
      "name": "Postgres Chat Memory"
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "ak02check@gmail.com",
          "mode": "list",
          "cachedResultName": "ak02check@gmail.com"
        },
        "start": "={{ $fromAI('start','date & time the patient asked')  }}",
        "end": "={{ $fromAI('End','40 min after the start')  }}",
        "useDefaultReminders": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Use_Default_Reminders', ``, 'boolean') }}",
        "additionalFields": {
          "attendees": [
            "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('attendees0_Attendees', ``, 'string') }}"
          ],
          "location": "={{ $fromAI('location','the doctor or clinic address')  }}",
          "summary": "Appointment confirmed"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        1264,
        1120
      ],
      "id": "59a07fbe-c58d-4f5f-829a-e2c53a3be225",
      "name": "Create_Calendar"
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "ak02check@gmail.com",
          "mode": "list",
          "cachedResultName": "ak02check@gmail.com"
        },
        "returnAll": true,
        "timeMin": "={{ $fromAI('after', 'The earliest datetime we want to look for events for' ) }}",
        "timeMax": "={{ $fromAI('before', 'The latest datetime we want to look for events for' ) }}",
        "options": {
          "query": "={{ $fromAI('query', 'The search query to look for in the calendar. Leave empty if no search query is needed' ) }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        1792,
        1120
      ],
      "id": "39ea7c1a-df9b-4552-b994-f91a14846d39",
      "name": "Check_Calendar"
    },
    {
      "parameters": {
        "operation": "update",
        "calendar": {
          "__rl": true,
          "value": "ak02check@gmail.com",
          "mode": "list",
          "cachedResultName": "ak02check@gmail.com"
        },
        "eventId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Event_ID', ``, 'string') }}",
        "updateFields": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        1632,
        1120
      ],
      "id": "ac8f9bb7-1af2-45a0-8eb4-5bd1fd8ad73b",
      "name": "Modify_Calendar"
    },
    {
      "parameters": {
        "operation": "delete",
        "calendar": {
          "__rl": true,
          "value": "ak02check@gmail.com",
          "mode": "list",
          "cachedResultName": "ak02check@gmail.com"
        },
        "eventId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Event_ID', ``, 'string') }}",
        "options": {
          "sendUpdates": "all"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        1440,
        1120
      ],
      "id": "86fa8e99-4790-422b-9f6a-c89e156fba4a",
      "name": "Delete_Calendar"
    }
  ],
  "connections": {
    "WhatsApp Trigger": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Text Only Prompt": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Audio": {
      "main": [
        [
          {
            "node": "Transcribe Audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transcribe Audio": {
      "main": [
        [
          {
            "node": "Audio prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Audio prompt": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Generate audio",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Respond with text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate audio": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Send message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Get Audio Url",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Text Only Prompt",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Image Url",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Audio Url": {
      "main": [
        [
          {
            "node": "Download Audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Image Url": {
      "main": [
        [
          {
            "node": "Download Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Image": {
      "main": [
        [
          {
            "node": "Analyze image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze image": {
      "main": [
        [
          {
            "node": "Image + Text prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Image + Text prompt": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Create_Calendar": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Check_Calendar": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Modify_Calendar": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Delete_Calendar": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": null,
  "pinData": {},
  "versionId": "74dc995c-1197-48ec-b475-122e548eef65",
  "triggerCount": 0,
  "shared": [
    {
      "createdAt": "2025-09-16T11:25:37.495Z",
      "updatedAt": "2025-09-16T11:25:37.495Z",
      "role": "workflow:owner",
      "workflowId": "QzNTOaRdIZBWkf6a",
      "projectId": "nnULjHyqOVknXpmc"
    }
  ],
  "tags": []
}